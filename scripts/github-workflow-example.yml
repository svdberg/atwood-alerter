# Example GitHub Actions workflow for 2-environment setup
# This file shows the planned CI/CD pipeline structure

name: CI/CD Pipeline (2 Environments)

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION_STAGING: us-west-2
  AWS_REGION_PRODUCTION: eu-north-1
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  # Security and Code Quality (runs on all pushes)
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'

  # Build and Test (runs on all pushes)
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: [security-scan]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python and Node
        # ... build steps
      - name: Run tests
        run: python -m pytest tests/ -v
      - name: Build Lambda layer
        # ... Docker build
      - name: Build Elm frontend
        # ... frontend build

  # Deploy to Staging (on main branch)
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: ${{ env.AWS_REGION_STAGING }}
      - name: Deploy to staging
        run: |
          export ENVIRONMENT=staging
          export AWS_DEFAULT_REGION=${{ env.AWS_REGION_STAGING }}
          ./scripts/deploy-staging.sh

  # Integration Tests (after staging deployment)
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Run integration tests against staging
        run: |
          export ENVIRONMENT=staging
          python scripts/verify-deployment.py

  # Deploy to Production (on tags only)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: integration-tests
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION_PRODUCTION }}
      - name: Deploy to production
        run: |
          export ENVIRONMENT=production
          export AWS_DEFAULT_REGION=${{ env.AWS_REGION_PRODUCTION }}
          ./scripts/deploy-production.sh
      - name: Post-deployment verification
        run: |
          export ENVIRONMENT=production
          python scripts/verify-deployment.py

# Required GitHub Secrets:
# - AWS_ACCESS_KEY_ID_STAGING
# - AWS_SECRET_ACCESS_KEY_STAGING
# - AWS_ACCESS_KEY_ID_PROD
# - AWS_SECRET_ACCESS_KEY_PROD
# - VAPID_PRIVATE_KEY
# - VAPID_PUBLIC_KEY